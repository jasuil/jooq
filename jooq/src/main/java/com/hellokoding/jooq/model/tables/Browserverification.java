/*
 * This file is generated by jOOQ.
*/
package com.hellokoding.jooq.model.tables;


import com.hellokoding.jooq.model.Test;
import com.hellokoding.jooq.model.tables.records.BrowserverificationRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Browserverification extends TableImpl<BrowserverificationRecord> {

    private static final long serialVersionUID = -2131334956;

    /**
     * The reference instance of <code>test.browserVerification</code>
     */
    public static final Browserverification BROWSERVERIFICATION = new Browserverification();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BrowserverificationRecord> getRecordType() {
        return BrowserverificationRecord.class;
    }

    /**
     * The column <code>test.browserVerification.email</code>.
     */
    public final TableField<BrowserverificationRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>test.browserVerification.code</code>.
     */
    public final TableField<BrowserverificationRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>test.browserVerification.createdAt</code>.
     */
    public final TableField<BrowserverificationRecord, Timestamp> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>test.browserVerification</code> table reference
     */
    public Browserverification() {
        this(DSL.name("browserVerification"), null);
    }

    /**
     * Create an aliased <code>test.browserVerification</code> table reference
     */
    public Browserverification(String alias) {
        this(DSL.name(alias), BROWSERVERIFICATION);
    }

    /**
     * Create an aliased <code>test.browserVerification</code> table reference
     */
    public Browserverification(Name alias) {
        this(alias, BROWSERVERIFICATION);
    }

    private Browserverification(Name alias, Table<BrowserverificationRecord> aliased) {
        this(alias, aliased, null);
    }

    private Browserverification(Name alias, Table<BrowserverificationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Browserverification as(String alias) {
        return new Browserverification(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Browserverification as(Name alias) {
        return new Browserverification(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Browserverification rename(String name) {
        return new Browserverification(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Browserverification rename(Name name) {
        return new Browserverification(name, null);
    }
}
