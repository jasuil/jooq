<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>jooq</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>jooq</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<spring.datasource.driver-class-name>org.h2.Driver</spring.datasource.driver-class-name>
		<spring.datasource.url>jdbc:h2:file:./h2_data</spring.datasource.url>
		<spring.datasource.username>jasuil</spring.datasource.username>
		<spring.datasource.password></spring.datasource.password>
		<flyway.version>7.2.1</flyway.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<!--<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>-->

		<!-- https://mvnrepository.com/artifact/org.codehaus.mojo/build-helper-maven-plugin -->
		<dependency>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>build-helper-maven-plugin</artifactId>
			<version>3.1.0</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>2.1.210</version>
			<scope>runtime</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.jooq/jooq -->
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
			<version>3.14.3</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.flywaydb/flyway-maven-plugin -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-maven-plugin</artifactId>
			<version>${flyway.version}</version>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>${flyway.version}</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>



	<build>
		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>


			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>7.2.1</version>
				<configuration>
					<url>${spring.datasource.url}</url>
					<user>${spring.datasource.username}</user>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.h2database</groupId>
						<artifactId>h2</artifactId>
						<version>2.1.210</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/generated/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<!--<version>${org.jooq.version}</version>-->

				<!-- The jOOQ code generation plugin is also executed in the generate-sources phase, prior to compilation -->
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>

				<!-- This is a minimal working configuration. See the manual's section about the code generator for more details -->
				<configuration>
					<jdbc>
						<url>${spring.datasource.url}</url>
						<user>${spring.datasource.username}</user>
					</jdbc>
					<generator>
						<database>
							<includes>.*</includes>
							<!-- without DB shema, use PUBLIC -->
							<!--<inputSchema>PUBLIC</inputSchema>-->
							<inputSchema>JOOQ_TEST</inputSchema>
						</database>
						<target>
							<packageName>com.example.demo.generates</packageName>
							<directory>${basedir}/src/main/java</directory>
						</target>
					</generator>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>jooq-generate</id>
			<build>
				<plugins>

					<plugin>
						<groupId>org.jooq</groupId>
						<artifactId>jooq-codegen-maven</artifactId>
						<!--<version>${org.jooq.version}</version>-->

						<!-- The jOOQ code generation plugin is also executed in the generate-sources phase, prior to compilation -->
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>

						<!-- This is a minimal working configuration. See the manual's section about the code generator for more details -->
						<configuration>
							<jdbc>
								<url>${spring.datasource.url}</url>
								<user>${spring.datasource.username}</user>
							</jdbc>
							<generator>
								<database>
									<includes>.*</includes>
									<!-- without DB shema, use PUBLIC -->
									<!--<inputSchema>PUBLIC</inputSchema>-->
									<inputSchema>JOOQ_TEST</inputSchema>
								</database>
								<target>
									<packageName>com.example.demo.generates</packageName>
									<directory>${basedir}/src/main/java</directory>
								</target>
							</generator>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
